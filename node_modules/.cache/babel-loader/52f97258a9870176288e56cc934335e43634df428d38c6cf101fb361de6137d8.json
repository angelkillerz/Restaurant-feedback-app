{"ast":null,"code":"var _jsxFileName = \"/Users/pang/Brad/Restaurant-feedback-app/src/components/FeedbackForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Card from \"./shared/Card\";\nimport Button from \"./shared/Button\";\nimport RatingSelect from \"./RatingSelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FeedbackForm(_ref) {\n  _s();\n  let {\n    handleAdd\n  } = _ref;\n  //State\n  const [text, setText] = useState('');\n  const [rating, setRating] = useState(1);\n  const [btnDisabled, setBtnDisabled] = useState(true);\n  const [message, setMessage] = useState('');\n\n  //To handle the onChange event\n  const handleTextChange = e => {\n    if (text === '') {\n      setBtnDisabled(true);\n      setMessage(null);\n    } else if (text !== '' && text.trim().length === 10) {\n      setMessage('Text must be at least 10');\n      setBtnDisabled(false);\n    } else {\n      setMessage(null);\n      setBtnDisabled(false);\n    }\n    setText(e.target.value);\n  };\n\n  //handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (text.trim().length > 10) {\n      const newFeedback = {\n        text: text,\n        rating: rating\n      };\n      handleAdd(newFeedback);\n      setText('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"How would you rate us?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RatingSelect, {\n        select: rating => setRating(rating)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleTextChange,\n          type: \"text\",\n          placeholder: \"Write a review\",\n          value: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          isDisabled: btnDisabled,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this);\n}\n_s(FeedbackForm, \"S9RsXIH9TJIvTMZXLAoFaa0yB/A=\");\n_c = FeedbackForm;\nexport default FeedbackForm;\nvar _c;\n$RefreshReg$(_c, \"FeedbackForm\");","map":{"version":3,"names":["useState","Card","Button","RatingSelect","jsxDEV","_jsxDEV","FeedbackForm","_ref","_s","handleAdd","text","setText","rating","setRating","btnDisabled","setBtnDisabled","message","setMessage","handleTextChange","e","trim","length","target","value","handleSubmit","preventDefault","newFeedback","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","select","className","onChange","type","placeholder","isDisabled","_c","$RefreshReg$"],"sources":["/Users/pang/Brad/Restaurant-feedback-app/src/components/FeedbackForm.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport Card from \"./shared/Card\";\nimport Button from \"./shared/Button\";\nimport RatingSelect from \"./RatingSelect\";\nfunction FeedbackForm({handleAdd}) {\n    //State\n    const [text, setText] = useState('');\n    const [rating, setRating] = useState(1);\n    const [btnDisabled, setBtnDisabled] = useState(true);\n    const [message, setMessage] = useState('');\n\n\n    //To handle the onChange event\n    const handleTextChange = (e) => {\n\n        if(text === '') {\n            setBtnDisabled(true);\n            setMessage(null);\n        } else if(text !== '' && text.trim().length === 10)  {\n            setMessage('Text must be at least 10');\n            setBtnDisabled(false);\n        } else {\n            setMessage(null);\n            setBtnDisabled(false);\n        }\n        setText(e.target.value)\n    }\n\n    //handle form submission\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (text.trim().length > 10) {\n            const newFeedback = {\n                text: text,\n                rating: rating,\n            }\n\n            handleAdd(newFeedback);\n            setText('')\n        }\n    }\n\n\n\n    return (<Card>\n                <form onSubmit={handleSubmit} >\n                    <h2>How would you rate us?</h2>\n                    <RatingSelect select={(rating) => setRating(rating)}/>\n                    <div className=\"input-group\">\n                        <input \n                        onChange={handleTextChange} \n                        type=\"text\" \n                        placeholder=\"Write a review\" \n                        value={text}\n                        />\n                        <Button type=\"submit\" \n                        isDisabled={btnDisabled} \n                        >\n                            Send\n                        </Button>\n                    </div>\n\n                    {message && <div className=\"message\">{message}</div>}\n                </form>\n            </Card>);\n}\n\nexport default FeedbackForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}